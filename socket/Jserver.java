package socket;

import java.awt.Color;
import java.awt.List;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import javax.swing.JButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dell-pc
 */
public class Jserver extends javax.swing.JFrame {

    /**
     * Creates new form JFlogin
     */
    public Jserver() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        btnserA = new JButton();
        btnserB = new JButton();
        btnserC = new JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("����", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("�����������ͻ���");

        btnserA.setBackground(new Color(255, 0, 0));
        btnserA.setText("�ͻ���A");
        btnserA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnserAActionPerformed(evt);
            }
        });

        btnserB.setBackground(new Color(255, 0, 0));
        btnserB.setText("�ͻ���B");
        btnserB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnserBActionPerformed(evt);
            }
        });

        btnserC.setBackground(new Color(255, 0, 0));
        btnserC.setText("�ͻ���C");
        btnserC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnserCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnserC)
                            .addComponent(btnserB)
                            .addComponent(btnserA)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel1)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(btnserA)
                .addGap(18, 18, 18)
                .addComponent(btnserB)
                .addGap(18, 18, 18)
                .addComponent(btnserC)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnserBActionPerformed(java.awt.event.ActionEvent evt) {                                        

        // TODO add your handling code here:
    }                                       

    private void btnserAActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void btnserCActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private JButton btnserA;
    private JButton btnserB;
    private JButton btnserC;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration                   

    public JButton getbtnserA() {
        return btnserA;
    }

    public JButton getbtnserB() {
        return btnserB;
    }

    public JButton getbtnserC() {
        return btnserC;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Jserver.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Jserver.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Jserver.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Jserver.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Jserver jserver = new Jserver();
        jserver.setVisible(true);
        ServerSocket s = null;
        try {
            s = new ServerSocket(8888);
        } catch (IOException e) {
        }
        while (true) {
            try {
                Socket s1 = s.accept();
                (new Thread(new Runner(s1, jserver))).start();
            } catch (IOException ex) {

            }
        }
    }
}

class Runner implements Runnable {

    private static java.util.List<Socket> list = new ArrayList<>();
    private Socket socket = null;
    private Jserver jserver;
    BufferedReader reader;
    PrintWriter writer;
    String name;

    Runner(Socket socket, Jserver jserver) {
        this.socket = socket;
        this.jserver = jserver;

    }

    public void run() {
                try {
            //������
            reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            //�����
            writer = new PrintWriter(socket.getOutputStream(), true);
            //��ȡ��
            String line = reader.readLine();
            //
            name = line.substring(0);
            //������
            System.out.println(name);
                    System.out.println(socket);
            list.add(socket);
                    System.out.println(list);
            for (Socket s : list) {
                try {
                    PrintWriter w = new PrintWriter(s.getOutputStream(), true);
                    w.println(name);             
                } catch (IOException ex) {
                    Logger.getLogger(Runner.class.getName()).log(Level.SEVERE, null, ex);
               }
            }
            //��½�����˱���ɫ 
            if (name.equals("A")) {
                jserver.getbtnserA().setBackground(Color.green); 
            } else if (name.equals("B")) {
                jserver.getbtnserB().setBackground(Color.green);
            } else if (name.equals("C")) {
                jserver.getbtnserC().setBackground(Color.green);
            }
            //��ѭ��
            while (true) {
//                String line1 = reader.readLine();
            }
        } catch (IOException e) {
            if (name.equals("A")) {
                jserver.getbtnserA().setBackground(Color.red);
            } else if (name.equals("B")) {
                jserver.getbtnserB().setBackground(Color.red);
            } else if (name.equals("C")) {
                jserver.getbtnserC().setBackground(Color.red);
            }

        }
    }
}
